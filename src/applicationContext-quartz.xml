<?xml version="1.0" encoding="UTF-8" ?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd"
	>
	
	 <!-- 初始化运行环境 -->
    <bean id="init" class="com.wl.spring.base.InitEnvironment" init-method="init">
    <property name="logbackConfigLocation" value="com/wl/logback/logback.xml"/>
    <property name="agentconfigpath" value="${agentconfig}"/>
    <property name="internalEdition" value="${internalEdtion}"/>
    </bean>
	
    <!-- Agent更新ftp服务配置 -->
    <bean name="ftpAgentUp" class="com.wl.tools.FtpTool" init-method="initialParams" lazy-init="true">
    <property name="configname" value="${agentconfig}"/>
    <property name="section" value="agentftp"/>
    </bean>
    
    <!-- 截屏发送服务配置 -->
    <bean name="ftpScreenShot" class="com.wl.tools.FtpTool" init-method="initialParams" lazy-init="true">
    <property name="configname" value="${agentconfig}"/>
    <property name="section" value="screenshotftp"/>
    </bean>
    
    <!-- 通用ftp -->
    <bean name="commonftp" class="com.wl.tools.FtpTool" lazy-init="true">
    <property name="configname" value="${agentconfig}"/>
    </bean>
    
    <!-- 凭证配置文件下载FTP -->
    <bean name="ftpVoucherXml" class="com.wl.tools.FtpTool" init-method="initialParams" lazy-init="true">
    <property name="configname" value="${agentconfig}"/>
    <property name="section" value="voucherXmlFtp"/>
    </bean>
    
    
    
    <!-- http文件服务器 -->
    <bean name="httpFileServer" class="com.wl.netty.http.file.server.MyNettyHttpFileServer" >
    <constructor-arg name="port" value="${httpFileSvrPort}"/>
    <constructor-arg name="url" value="/files/"/>
    <property name="section" value="fileTransfer"/>
    <property name="configname" value="${agentconfig}"/>
    </bean>
    
    <!-- httpClient -->
    <bean name="httpClient" class="com.wl.http.client.HttpClient"  scope="prototype">
    <property name="url" value="${httpReqUrl}"/>
    </bean>
    
    
    
    <!-- Agent更新服务 -->
    <bean id="agentUpdate" class="com.wl.automask.AgentAutomaticaUpdate" lazy-init="true" >
    <property name="ftp" ref="ftpAgentUp"/>
    <property name="configname" value="${agentconfig}"/>
    <property name="section" value="main"/>
    <property name="httpClient" ref="httpClient"/>
     <property name="ebagentconfig" value="${ebagentconfig}"/>
    </bean>
    
    
    <!-- 定时任务   客户端定时检查版本是否需要更新 -->
    <bean name="autoUpdateAgent" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <!-- 执行任务的类 -->
    <property name="targetObject" ref="agentUpdate"/>
    <!-- 执行类中的方法 -->
    <property name="targetMethod" value="doUpdate"/>
    <!-- 是否允许任务并发执行.当值为false时，表示必须等到前一个线程处理完毕后才再启一个新线程 -->
    <property name="concurrent" value="true"/>
    </bean>

    <!-- 定时任务出发器  方法1-->
    <bean name="autoUodateAgentTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail" ref="autoUpdateAgent"/>
    <property name="cronExpression">
    <value>0  */20 * * * ?</value><!-- 每20分钟执行一次 -->
    </property>
    <property name="startDelay" value="3000"></property>  
    </bean>
    
     <!-- 定时任务出发器  方法2-->
    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
    <property name="jobDetail" ref="autoUpdateAgent"/>  
    <property name="startDelay" value="5000"/>  
    <property name="repeatInterval" value="5000"/>  
    </bean>  
    
    <!-- 执行定时任务 -->
    <bean name="quartzTask" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
    <list>
    <ref bean="autoUodateAgentTrigger"/>
    </list>
    </property>
    <!--  <property name="autoStartup" value="true"/>-->
    </bean>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
 

</beans>